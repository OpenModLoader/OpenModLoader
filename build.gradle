import com.openmodloader.gradle.OpenGradlePlugin

buildscript{
    repositories {
        mavenLocal()
        maven {
            name = 'Modmuss'
            url = 'http://maven.modmuss50.me/'
        }
    }
    dependencies{
        classpath 'com.openmodloader:OpenGradle:0.0.11-SNAPSHOT'
    }
}

apply plugin: OpenGradlePlugin
group 'com.openmodloader'

def minecraft_version = "18w46a"
def pomf_version = "1"
version minecraft_version + '-1.0.9'

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
	version = version + "." + "${System.getenv().BUILD_NUMBER}"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

minecraft {
    version = minecraft_version
    pomfVersion = pomf_version
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        name = 'mojang'
        url = 'https://libraries.minecraft.net/'
    }
    maven {
        name = 'Modmuss'
        url = 'http://maven.modmuss50.me/'
    }
	  maven {
		    name = 'Forge' //For ModLauncher
		    url = 'http://files.minecraftforge.net/maven/'
	  }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "com.github.zafarkhaja:java-semver:0.9.0"
    compile 'com.google.code.findbugs:jsr305:3.0.2'
    compile 'com.typesafe:config:1.3.3'
    compile 'com.mojang:authlib:1.5.25'
    compile 'net.sf.jopt-simple:jopt-simple:5.0.4'
    compile 'net.fabricmc:tiny-remapper:+'
  	compile 'cpw.mods:modlauncher:0.1.0'
    compile 'me.modmuss50:Fusion:0.0.1.+'
}

jar {
    manifest {
        attributes(
                'MinecraftVersion': minecraft_version,
                'OMLVersion': project.version,
                'PomfVersion': pomf_version,
                'Main-Class': 'com.openmodloader.loader.launch.ServerLauncher',
                'Class-Path': 'minecraft_server.' + minecraft_version + '.jar' + getClasspathEntries()
        )
    }
}

String getClasspathEntries(){
	String classPath = ""
	File serverDeps = file("src/main/resources/dependencies_server.txt")
	serverDeps.eachLine{ String dep ->
		String[] depSplit = dep.split("/")
		classPath = classPath + " libs/" + depSplit[depSplit.length -1]
	}
	return classPath
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

build.dependsOn deobfJar

publishing {
	publications {
		maven(MavenPublication) {
			groupId project.group
			artifactId project.archivesBaseName
			version project.version

			from components.java
      artifact deobfJar
		}
	}
	repositories {
		maven {
			url "http://mavenupload.modmuss50.me/"
			if (project.hasProperty('mavenPass')) {
				credentials {
					username 'buildslave'
					password project.getProperty('mavenPass')
				}
			}
		}
	}
}
